image: docker:stable

services:
  - docker:stable-dind

variables:
  DOCKER_HOST: tcp://docker:2376
  DOCKER_TLS_CERTDIR: "/certs"
  CONTAINER_BRANCH_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  CONTAINER_MASTER_RELEASE_IMAGE: $CI_REGISTRY_IMAGE:latest
  CONTAINER_MASTER_RELEASE_NAME: yuhfo

stages:
  - build
  - test
  - release
  - deploy

.base_docker:
  before_script:
    - echo $CI_REGISTRY_USER
    - echo $CI_REGISTRY_PASSWORD
    - echo $CI_REGISTRY
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY

branch_build:
  stage: build
  extends: .base_docker
  script:
    - docker build --pull -t $CONTAINER_BRANCH_IMAGE .
    - docker push $CONTAINER_BRANCH_IMAGE
    - echo "Build Success"

master_release:
  stage: release
  extends: .base_docker
  script:
    - docker pull $CONTAINER_BRANCH_IMAGE
    - docker tag $CONTAINER_BRANCH_IMAGE $CONTAINER_MASTER_RELEASE_IMAGE
    - docker push $CONTAINER_MASTER_RELEASE_IMAGE
    - echo "Release Success"
  only:
    - master

master_deploy:
  stage: deploy
  image: debian:buster-slim
  before_script:
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
    - mkdir -p ~/.ssh
    - eval $(ssh-agent -s)
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
  script:
    - ssh-add <(echo "$FE_SERVER_SSH_PRIVATE_KEY")
    - ssh -t -p$FE_SERVER_SSH_PORT $FE_SERVER_SSH_USERNAME@$FE_SERVER_IP "sudo docker stop $CONTAINER_MASTER_RELEASE_NAME || true && docker rm $CONTAINER_MASTER_RELEASE_NAME || true"
    - ssh -t -p$FE_SERVER_SSH_PORT $FE_SERVER_SSH_USERNAME@$FE_SERVER_IP "sudo docker rmi $CONTAINER_MASTER_RELEASE_IMAGE || true"
    - ssh -t -p$FE_SERVER_SSH_PORT $FE_SERVER_SSH_USERNAME@$FE_SERVER_IP "sudo docker pull $CONTAINER_MASTER_RELEASE_IMAGE"
    - ssh -t -p$FE_SERVER_SSH_PORT $FE_SERVER_SSH_USERNAME@$FE_SERVER_IP "sudo docker run -d --name $CONTAINER_MASTER_RELEASE_NAME -p 9009:3000 $CONTAINER_MASTER_RELEASE_IMAGE"
  only:
    - master
